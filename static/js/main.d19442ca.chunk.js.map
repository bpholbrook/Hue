{"version":3,"sources":["components/Header/index.js","components/Shade/Name/index.js","components/Shade/Hex/index.js","components/Shade/index.js","helpers/copyStringToClipboard.js","components/Hue/index.js","components/Hues/index.js","containers/Hues/index.js","components/Footer/index.js","serviceWorker.js","index.js","App.js"],"names":["Header","react_default","a","createElement","Name","_ref","pos","hue","shade","className","concat","Hex","hex","Shade","hues","_hues$hue$shade","text","shadeClass","styles","backgroundColor","style","onClick","e","str","el","document","value","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","copyStringToClipboard","toLowerCase","child","currentTarget","children","fontStyle","innerText","setTimeout","components_Shade_Name","components_Shade_Hex","Hue","shadeComponents","Object","keys","map","key","src_components_Shade","Hues","hueComponents","src_components_Hue","HuesView","src_components_Hues","Footer","href","target","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","rootElement","getElementById","render","Fragment","src_components_Header","containers_Hues","src_components_Footer","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d19442ca.chunk.js","sourcesContent":["// Header component\nimport React from 'react'\nimport './index.css'\n\nconst Header = () => {\n  return (\n    <header>\n      <h2>Material Design Color Palettes</h2>\n    </header>\n  )\n}\n\nexport default Header\n","// Name component\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.css'\n\nconst Name = ({pos, hue, shade}) => {\n  return (\n    <span className='Hue_Shade_Name'>\n      {pos === 0 ? `${hue === 'default' ? shade : `${hue} ${shade}`}` : shade}\n    </span>\n  )\n}\n\nName.propTypes = {\n  pos: PropTypes.number.isRequired,\n  hue: PropTypes.string.isRequired,\n  shade: PropTypes.string.isRequired\n}\n\nexport default Name","// Hex component\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.css'\n\nconst Hex = ({hex}) => {\n  return (\n    <span className='Hue_Shade_Hex'>{hex}</span>\n  )\n}\n\nHex.propTypes = {\n  hex: PropTypes.string.isRequired\n}\n\nexport default Hex","// Shade component\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.css'\nimport copyStringToClipboard from '../../helpers/copyStringToClipboard'\nimport Name from './Name'\nimport Hex from './Hex'\n\n\nconst Shade = ({ hues, hue, shade, pos }) => {\n  const { text, hex } = hues[hue][shade]\n\n  const shadeClass = `Hue_Shade ${\n    text === 'dark' ? 'Hue_Shade--dark' : 'Hue_Shade--light'\n  }`\n  \n  const styles = { backgroundColor: hex }\n\n  const handleClick = e => {\n    copyStringToClipboard(hex.toLowerCase())\n    const child = e.currentTarget.children[1]\n    child.style.fontStyle = 'italic'\n    child.innerText = 'Copied to clipboard'\n    setTimeout(() => {\n      child.style.fontStyle = 'inherit'\n      child.innerText = hex.toLowerCase()\n    }, 1000)\n  }\n\n  return (\n    <div\n      className={shadeClass}\n      style={styles}\n      onClick={handleClick}\n    >\n      <Name pos={pos} hue={hue} shade={shade} />\n      <Hex hex={hex.toLowerCase()} />\n    </div>\n  )\n}\n\nShade.propTypes = {\n  hues: PropTypes.object.isRequired,\n  hue: PropTypes.string.isRequired,\n  shade: PropTypes.string.isRequired,\n  pos: PropTypes.number.isRequired\n}\n\nexport default Shade\n","// Clipboard helper\n\n/**\n * Copies a string to the user's clipboard.\n * @param {*} str - The string to be copied.\n */\nexport default function copyStringToClipboard(str) {\n  var el = document.createElement('textarea')\n  el.value = str\n  el.setAttribute('readonly', '')\n  el.style = { position: 'absolute', left: '-9999px' }\n  document.body.appendChild(el)\n  el.select()\n  document.execCommand('copy')\n  document.body.removeChild(el)\n}\n","// Hue component\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.css'\nimport Shade from '../Shade'\n\nconst Hue = ({ hues, hue }) => {\n  const shadeComponents = Object.keys(hues[hue]).map((shade, key) => (\n    <Shade key={key} pos={key} hues={hues} hue={hue} shade={shade} />\n  ))\n  return (\n    <div className='Hue'>{shadeComponents}</div>\n  )\n}\n\nHue.propTypes = {\n  hues: PropTypes.object.isRequired,\n  hue: PropTypes.string.isRequired\n}\n\nexport default Hue\n","// Hues component\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.css'\nimport Hue from '../Hue'\n\nconst Hues = ({ hues }) => {\n\n  const hueComponents = Object.keys(hues).map((hue, key) => (\n    <Hue hues={hues} hue={hue} key={key} />\n  ))\n\n  return (\n    <div className='Hues'>\n      {hueComponents}\n    </div>\n  )\n}\n\nHues.propTypes = {\n  hues: PropTypes.object.isRequired\n}\n\nexport default Hues\n","// Hues container\nimport React from 'react'\nimport hues from '../../data'\nimport Hues from '../../components/Hues'\n\nconst HuesView = () => {\n  return (\n    <Hues hues={hues} />\n  )\n}\n\nexport default HuesView\n","// Footer component\nimport React from 'react'\nimport './index.css'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <ul>\n        <li>\n          <span>\n            <a\n              href='https://github.com/bpholbrook/hue'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              View source on GitHub\n            </a>\n          </span>\n        </li>\n      </ul>\n    </footer>\n  )\n}\n\nexport default Footer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst rootElement = document.getElementById('root')\n\nrender(<App />, rootElement)\n\nserviceWorker.register()\n","// App component\nimport React from 'react'\nimport './App.css'\nimport Header from './components/Header'\nimport Hues from './containers/Hues'\nimport Footer from './components/Footer'\n\nexport default () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <Hues />\n      <Footer />\n    </React.Fragment>\n  )\n}\n"],"sourceRoot":""}